# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        os:
        - ubuntu-latest
        - windows-latest
        node-version:
        - 22
        - 20
        - 18
        - 16
        - 14
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        check-latest: true
        
    - name: Check for package-lock.json
      run: |
        if [ ! -f package-lock.json ]; then
          echo "package-lock.json not found, generating..."
          npm install --package-lock-only
        else
          echo "package-lock.json found, proceeding with install..."
          npm ci
        fi
        
    - name: Install dependencies with npm or pnpm
      run: |
        if [ -f package-lock.json ]; then
          npm ci
        elif [ -f pnpm-lock.yaml ]; then
          npm install -g pnpm
          pnpm install --frozen-lockfile
        else
          echo "No lock file found, job should be failed, but for project build and run test, add package-lock.json file."
          npm install --package-lock-only
          echo "Proceeding with dependency installation..."
          npm ci
        fi
        
    - name: Build
      run: |
        if [ -f package-lock.json ]; then
          npm run build --if-present
        elif [ -f pnpm-lock.yaml ]; then
          pnpm run build --if-present
        else
          echo "Lock file not found. Cannot run build scripts."
          exit 1
        fi

    - name: Test
      run: |
        if [ -f "package.json" ] && [ "$(node -p "require('./package.json').scripts && require('./package.json').scripts.test")" ]; then
          if [ -f "package-lock.json" ]; then
            npm test
          elif [ -f "pnpm-lock.yaml" ]; then
            pnpm test
          else
            echo "Lock file not found. Cannot run test scripts."
            exit 1
          fi
        fi
