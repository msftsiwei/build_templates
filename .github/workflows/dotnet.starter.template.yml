# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Core - ##REPO_NAME##

on:
   workflow_dispatch:
    inputs:
      repoName:
        description: Name of the repo
        required: false
      patch:
        description: 'Base64 encoded patch content'
        required: false
        default: ''
      command:
        description: 'Base64 encoded command content'
        required: false
        default: ''
      ref:
        description: 'The branch, tag, or commit SHA to checkout'
        required: false

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
           repository: ${{ github.event.inputs.repoName }}
           ref: ${{ github.event.inputs.ref }}
            
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x


    - name: Apply patch if provided, decode base64
      shell: bash
      run: |
          if [ -n "${{ github.event.inputs.patch }}" ]; then
            echo "Patch input provided. Applying patch..."
            echo "${{ github.event.inputs.patch }}" | base64 --decode | sed 's/\r$//'  > patch.diff
            echo "Decoded patch content:"
            cat patch.diff 
            echo "Apply the patch:"
            git apply --verbose patch.diff
          else
            echo "No patch input provided. Skipping patch application."
          fi
          echo "Print git diff on local repo"
          git diff

    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore

      
    - name: Run custom command
      shell: bash
      run: |
         if [ -n "${{ github.event.inputs.command }}" ]; then
           echo "Start running custom command"
           echo "${{ github.event.inputs.command }}"
           output=$(echo "${{ github.event.inputs.command }}" | base64 --decode | sed 's/\r$//')
           echo "Decoded custom command is:"
           echo $output
           echo "!!==================================!!"
           echo "Command output:"
           echo "!!==================================!!"
           eval $output
           echo "!!==================================!!"
           echo "RAN_CUSTOM_COMMAND=true" >> $GITHUB_ENV
           echo "Finished running custom command!"
           echo "!!== RUN COMPLETED ==!!"
         fi

    - name: Run Test (ces)
      shell: bash
      if: env.RAN_CUSTOM_COMMAND != 'true'
      run: |
          dotnet test --no-build --verbosity normal
          echo "!!== RUN COMPLETED ==!!"
